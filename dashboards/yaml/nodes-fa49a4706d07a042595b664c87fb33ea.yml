---
meta:
  type: db
  canSave: true
  canEdit: true
  canAdmin: true
  canStar: true
  slug: nodes
  url: "/d/fa49a4706d07a042595b664c87fb33ea/nodes"
  expires: '0001-01-01T00:00:00Z'
  created: '2020-10-08T11:24:44Z'
  updated: '2020-10-08T11:24:44Z'
  updatedBy: Anonymous
  createdBy: Anonymous
  version: 1
  hasAcl: false
  isFolder: false
  folderId: 0
  folderTitle: General
  folderUrl: ''
  provisioned: true
  provisionedExternalId: nodes.json
dashboard:
  __inputs: []
  __requires: []
  annotations:
    list: []
  editable: false
  gnetId: 
  graphTooltip: 0
  hideControls: false
  id: 3
  links: []
  refresh: ''
  rows:
  - collapse: false
    collapsed: false
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      gridPos: {}
      id: 2
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides: []
      spaceLength: 10
      span: 6
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (
            (1 - rate(node_cpu_seconds_total{job="node-exporter", mode="idle", instance="$instance"}[$__interval]))
          / ignoring(cpu) group_left
            count without (cpu)( node_cpu_seconds_total{job="node-exporter", mode="idle", instance="$instance"})
          )
        format: time_series
        interval: 1m
        intervalFactor: 5
        legendFormat: "{{cpu}}"
        refId: A
      thresholds: []
      timeFrom: 
      timeShift: 
      title: CPU Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: percentunit
        label: 
        logBase: 1
        max: 1
        min: 0
        show: true
      - format: percentunit
        label: 
        logBase: 1
        max: 1
        min: 0
        show: true
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 0
      gridPos: {}
      id: 3
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides: []
      spaceLength: 10
      span: 6
      stack: false
      steppedLine: false
      targets:
      - expr: node_load1{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: 1m load average
        refId: A
      - expr: node_load5{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: 5m load average
        refId: B
      - expr: node_load15{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: 15m load average
        refId: C
      - expr: count(node_cpu_seconds_total{job="node-exporter", instance="$instance",
          mode="idle"})
        format: time_series
        intervalFactor: 2
        legendFormat: logical cores
        refId: D
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Load Average
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: false
    title: Dashboard Row
    titleSize: h6
    type: row
  - collapse: false
    collapsed: false
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      gridPos: {}
      id: 4
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides: []
      spaceLength: 10
      span: 9
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (
            node_memory_MemTotal_bytes{job="node-exporter", instance="$instance"}
          -
            node_memory_MemFree_bytes{job="node-exporter", instance="$instance"}
          -
            node_memory_Buffers_bytes{job="node-exporter", instance="$instance"}
          -
            node_memory_Cached_bytes{job="node-exporter", instance="$instance"}
          )
        format: time_series
        intervalFactor: 2
        legendFormat: memory used
        refId: A
      - expr: node_memory_Buffers_bytes{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: memory buffers
        refId: B
      - expr: node_memory_Cached_bytes{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: memory cached
        refId: C
      - expr: node_memory_MemFree_bytes{job="node-exporter", instance="$instance"}
        format: time_series
        intervalFactor: 2
        legendFormat: memory free
        refId: D
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Memory Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
    - cacheTimeout: 
      colorBackground: false
      colorValue: false
      colors:
      - rgba(50, 172, 45, 0.97)
      - rgba(237, 129, 40, 0.89)
      - rgba(245, 54, 54, 0.9)
      datasource: "$datasource"
      format: percent
      gauge:
        maxValue: 100
        minValue: 0
        show: true
        thresholdLabels: false
        thresholdMarkers: true
      gridPos: {}
      id: 5
      interval: 
      links: []
      mappingType: 1
      mappingTypes:
      - name: value to text
        value: 1
      - name: range to text
        value: 2
      maxDataPoints: 100
      nullPointMode: connected
      nullText: 
      postfix: ''
      postfixFontSize: 50%
      prefix: ''
      prefixFontSize: 50%
      rangeMaps:
      - from: 'null'
        text: N/A
        to: 'null'
      span: 3
      sparkline:
        fillColor: rgba(31, 118, 189, 0.18)
        full: false
        lineColor: rgb(31, 120, 193)
        show: false
      tableColumn: ''
      targets:
      - expr: |
          100 -
          (
            avg(node_memory_MemAvailable_bytes{job="node-exporter", instance="$instance"})
          /
            avg(node_memory_MemTotal_bytes{job="node-exporter", instance="$instance"})
          * 100
          )
        format: time_series
        intervalFactor: 2
        legendFormat: ''
        refId: A
      thresholds: 80, 90
      title: Memory Usage
      tooltip:
        shared: false
      type: singlestat
      valueFontSize: 80%
      valueMaps:
      - op: "="
        text: N/A
        value: 'null'
      valueName: current
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: false
    title: Dashboard Row
    titleSize: h6
    type: row
  - collapse: false
    collapsed: false
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 0
      gridPos: {}
      id: 6
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides:
      - alias: "/ read| written/"
        yaxis: 1
      - alias: "/ io time/"
        yaxis: 2
      spaceLength: 10
      span: 6
      stack: false
      steppedLine: false
      targets:
      - expr: rate(node_disk_read_bytes_total{job="node-exporter", instance="$instance",
          device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+"}[$__interval])
        format: time_series
        interval: 1m
        intervalFactor: 2
        legendFormat: "{{device}} read"
        refId: A
      - expr: rate(node_disk_written_bytes_total{job="node-exporter", instance="$instance",
          device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+"}[$__interval])
        format: time_series
        interval: 1m
        intervalFactor: 2
        legendFormat: "{{device}} written"
        refId: B
      - expr: rate(node_disk_io_time_seconds_total{job="node-exporter", instance="$instance",
          device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+"}[$__interval])
        format: time_series
        interval: 1m
        intervalFactor: 2
        legendFormat: "{{device}} io time"
        refId: C
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Disk I/O
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 
        show: true
      - format: s
        label: 
        logBase: 1
        max: 
        min: 
        show: true
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      gridPos: {}
      id: 7
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides:
      - alias: used
        color: "#E0B400"
      - alias: available
        color: "#73BF69"
      spaceLength: 10
      span: 6
      stack: true
      steppedLine: false
      targets:
      - expr: |
          sum(
            max by (device) (
              node_filesystem_size_bytes{job="node-exporter", instance="$instance", fstype!=""}
            -
              node_filesystem_avail_bytes{job="node-exporter", instance="$instance", fstype!=""}
            )
          )
        format: time_series
        intervalFactor: 2
        legendFormat: used
        refId: A
      - expr: |
          sum(
            max by (device) (
              node_filesystem_avail_bytes{job="node-exporter", instance="$instance", fstype!=""}
            )
          )
        format: time_series
        intervalFactor: 2
        legendFormat: available
        refId: B
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Disk Space Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: false
    title: Dashboard Row
    titleSize: h6
    type: row
  - collapse: false
    collapsed: false
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 0
      gridPos: {}
      id: 8
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides: []
      spaceLength: 10
      span: 6
      stack: false
      steppedLine: false
      targets:
      - expr: rate(node_network_receive_bytes_total{job="node-exporter", instance="$instance",
          device!="lo"}[$__interval])
        format: time_series
        interval: 1m
        intervalFactor: 2
        legendFormat: "{{device}}"
        refId: A
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Network Received
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 0
      gridPos: {}
      id: 9
      legend:
        alignAsTable: false
        avg: false
        current: false
        max: false
        min: false
        rightSide: false
        show: true
        sideWidth: 
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: 'null'
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      repeat: 
      seriesOverrides: []
      spaceLength: 10
      span: 6
      stack: false
      steppedLine: false
      targets:
      - expr: rate(node_network_transmit_bytes_total{job="node-exporter", instance="$instance",
          device!="lo"}[$__interval])
        format: time_series
        interval: 1m
        intervalFactor: 2
        legendFormat: "{{device}}"
        refId: A
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Network Transmitted
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: false
    title: Dashboard Row
    titleSize: h6
    type: row
  schemaVersion: 14
  style: dark
  tags: []
  templating:
    list:
    - current:
        text: Prometheus
        value: Prometheus
      hide: 0
      label: 
      name: datasource
      options: []
      query: prometheus
      refresh: 1
      regex: ''
      type: datasource
    - allValue: 
      current: {}
      datasource: "$datasource"
      hide: 0
      includeAll: false
      label: 
      multi: false
      name: instance
      options: []
      query: label_values(node_exporter_build_info{job="node-exporter"}, instance)
      refresh: 2
      regex: ''
      sort: 0
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
  time:
    from: now-1h
    to: now
  timepicker:
    refresh_intervals:
    - 5s
    - 10s
    - 30s
    - 1m
    - 5m
    - 15m
    - 30m
    - 1h
    - 2h
    - 1d
    time_options:
    - 5m
    - 15m
    - 1h
    - 6h
    - 12h
    - 24h
    - 2d
    - 7d
    - 30d
  timezone: UTC
  title: Nodes
  uid: fa49a4706d07a042595b664c87fb33ea
  version: 1
