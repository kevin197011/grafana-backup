---
meta:
  type: db
  canSave: true
  canEdit: true
  canAdmin: true
  canStar: true
  slug: kubernetes-compute-resources-namespace-workloads
  url: "/d/a87fb0d919ec0ea5f6543124e16c42a5/kubernetes-compute-resources-namespace-workloads"
  expires: '0001-01-01T00:00:00Z'
  created: '2020-10-08T11:24:44Z'
  updated: '2020-10-08T11:24:44Z'
  updatedBy: Anonymous
  createdBy: Anonymous
  version: 1
  hasAcl: false
  isFolder: false
  folderId: 0
  folderTitle: General
  folderUrl: ''
  provisioned: true
  provisionedExternalId: k8s-resources-workloads-namespace.json
dashboard:
  annotations:
    list: []
  editable: true
  gnetId: 
  graphTooltip: 0
  hideControls: false
  id: 22
  links: []
  refresh: 10s
  rows:
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 1
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides:
      - alias: quota - requests
        color: "#F2495C"
        dashes: true
        fill: 0
        hideTooltip: true
        legend: false
        linewidth: 2
        stack: false
      - alias: quota - limits
        color: "#FF9830"
        dashes: true
        fill: 0
        hideTooltip: true
        legend: false
        linewidth: 2
        stack: false
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          sum(
            node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}} - {{workload_type}}"
        legendLink: 
        step: 10
      - expr: scalar(kube_resourcequota{cluster="$cluster", namespace="$namespace",
          type="hard",resource="requests.cpu"})
        format: time_series
        intervalFactor: 2
        legendFormat: quota - requests
        legendLink: 
        step: 10
      - expr: scalar(kube_resourcequota{cluster="$cluster", namespace="$namespace",
          type="hard",resource="limits.cpu"})
        format: time_series
        intervalFactor: 2
        legendFormat: quota - limits
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: CPU Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: CPU Usage
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      id: 2
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: false
      steppedLine: false
      styles:
      - alias: Time
        dateFormat: YYYY-MM-DD HH:mm:ss
        pattern: Time
        type: hidden
      - alias: Running Pods
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 0
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #A'
        thresholds: []
        type: number
        unit: short
      - alias: CPU Usage
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #B'
        thresholds: []
        type: number
        unit: short
      - alias: CPU Requests
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #C'
        thresholds: []
        type: number
        unit: short
      - alias: CPU Requests %
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #D'
        thresholds: []
        type: number
        unit: percentunit
      - alias: CPU Limits
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #E'
        thresholds: []
        type: number
        unit: short
      - alias: CPU Limits %
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #F'
        thresholds: []
        type: number
        unit: percentunit
      - alias: Workload
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: true
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2"
        pattern: workload
        thresholds: []
        type: number
        unit: short
      - alias: Workload Type
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: workload_type
        thresholds: []
        type: number
        unit: short
      - alias: ''
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        pattern: "/.*/"
        thresholds: []
        type: string
        unit: short
      targets:
      - expr: count(namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",
          namespace="$namespace", workload_type="$type"}) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: A
        step: 10
      - expr: |
          sum(
            node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: B
        step: 10
      - expr: |
          sum(
            kube_pod_container_resource_requests_cpu_cores{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: C
        step: 10
      - expr: |
          sum(
            node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
          /sum(
            kube_pod_container_resource_requests_cpu_cores{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: D
        step: 10
      - expr: |
          sum(
            kube_pod_container_resource_limits_cpu_cores{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: E
        step: 10
      - expr: |
          sum(
            node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
          /sum(
            kube_pod_container_resource_limits_cpu_cores{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: F
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: CPU Quota
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      transform: table
      type: table
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: CPU Quota
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 3
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides:
      - alias: quota - requests
        color: "#F2495C"
        dashes: true
        fill: 0
        hideTooltip: true
        legend: false
        linewidth: 2
        stack: false
      - alias: quota - limits
        color: "#FF9830"
        dashes: true
        fill: 0
        hideTooltip: true
        legend: false
        linewidth: 2
        stack: false
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          sum(
              container_memory_working_set_bytes{cluster="$cluster", namespace="$namespace", container!="", image!=""}
            * on(namespace,pod)
              group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}} - {{workload_type}}"
        legendLink: 
        step: 10
      - expr: scalar(kube_resourcequota{cluster="$cluster", namespace="$namespace",
          type="hard",resource="requests.memory"})
        format: time_series
        intervalFactor: 2
        legendFormat: quota - requests
        legendLink: 
        step: 10
      - expr: scalar(kube_resourcequota{cluster="$cluster", namespace="$namespace",
          type="hard",resource="limits.memory"})
        format: time_series
        intervalFactor: 2
        legendFormat: quota - limits
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Memory Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: bytes
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Memory Usage
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      id: 4
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: false
      steppedLine: false
      styles:
      - alias: Time
        dateFormat: YYYY-MM-DD HH:mm:ss
        pattern: Time
        type: hidden
      - alias: Running Pods
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 0
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #A'
        thresholds: []
        type: number
        unit: short
      - alias: Memory Usage
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #B'
        thresholds: []
        type: number
        unit: bytes
      - alias: Memory Requests
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #C'
        thresholds: []
        type: number
        unit: bytes
      - alias: Memory Requests %
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #D'
        thresholds: []
        type: number
        unit: percentunit
      - alias: Memory Limits
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #E'
        thresholds: []
        type: number
        unit: bytes
      - alias: Memory Limits %
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #F'
        thresholds: []
        type: number
        unit: percentunit
      - alias: Workload
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: true
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$__cell_2"
        pattern: workload
        thresholds: []
        type: number
        unit: short
      - alias: Workload Type
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: workload_type
        thresholds: []
        type: number
        unit: short
      - alias: ''
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        pattern: "/.*/"
        thresholds: []
        type: string
        unit: short
      targets:
      - expr: count(namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",
          namespace="$namespace", workload_type="$type"}) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: A
        step: 10
      - expr: |
          sum(
              container_memory_working_set_bytes{cluster="$cluster", namespace="$namespace", container!="", image!=""}
            * on(namespace,pod)
              group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: B
        step: 10
      - expr: |
          sum(
            kube_pod_container_resource_requests_memory_bytes{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: C
        step: 10
      - expr: |
          sum(
              container_memory_working_set_bytes{cluster="$cluster", namespace="$namespace", container!="", image!=""}
            * on(namespace,pod)
              group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
          /sum(
            kube_pod_container_resource_requests_memory_bytes{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: D
        step: 10
      - expr: |
          sum(
            kube_pod_container_resource_limits_memory_bytes{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: E
        step: 10
      - expr: |
          sum(
              container_memory_working_set_bytes{cluster="$cluster", namespace="$namespace", container!="", image!=""}
            * on(namespace,pod)
              group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
          /sum(
            kube_pod_container_resource_limits_memory_bytes{cluster="$cluster", namespace="$namespace"}
          * on(namespace,pod)
            group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace="$namespace", workload_type="$type"}
          ) by (workload, workload_type)
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: F
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Memory Quota
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      transform: table
      type: table
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Memory Quota
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 1
      id: 5
      interval: 1m
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 1
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: false
      steppedLine: false
      styles:
      - alias: Time
        dateFormat: YYYY-MM-DD HH:mm:ss
        pattern: Time
        type: hidden
      - alias: Current Receive Bandwidth
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #A'
        thresholds: []
        type: number
        unit: Bps
      - alias: Current Transmit Bandwidth
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #B'
        thresholds: []
        type: number
        unit: Bps
      - alias: Rate of Received Packets
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #C'
        thresholds: []
        type: number
        unit: pps
      - alias: Rate of Transmitted Packets
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #D'
        thresholds: []
        type: number
        unit: pps
      - alias: Rate of Received Packets Dropped
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #E'
        thresholds: []
        type: number
        unit: pps
      - alias: Rate of Transmitted Packets Dropped
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: 'Value #F'
        thresholds: []
        type: number
        unit: pps
      - alias: Workload
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: true
        linkTargetBlank: false
        linkTooltip: Drill down to pods
        linkUrl: "./d/a164a7f0339f99e89cea5cb47e9be617/k8s-resources-workload?var-datasource=$datasource&var-cluster=$cluster&var-namespace=$namespace&var-workload=$__cell&var-type=$type"
        pattern: workload
        thresholds: []
        type: number
        unit: short
      - alias: Workload Type
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        link: false
        linkTargetBlank: false
        linkTooltip: Drill down
        linkUrl: ''
        pattern: workload_type
        thresholds: []
        type: number
        unit: short
      - alias: ''
        colorMode: 
        colors: []
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        pattern: "/.*/"
        thresholds: []
        type: string
        unit: short
      targets:
      - expr: |
          (sum(irate(container_network_receive_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: A
        step: 10
      - expr: |
          (sum(irate(container_network_transmit_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: B
        step: 10
      - expr: |
          (sum(irate(container_network_receive_packets_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: C
        step: 10
      - expr: |
          (sum(irate(container_network_transmit_packets_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: D
        step: 10
      - expr: |
          (sum(irate(container_network_receive_packets_dropped_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: E
        step: 10
      - expr: |
          (sum(irate(container_network_transmit_packets_dropped_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload_type="$type"}) by (workload))
        format: table
        instant: true
        intervalFactor: 2
        legendFormat: ''
        refId: F
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Current Network Usage
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      transform: table
      type: table
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: short
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 6
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_receive_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Receive Bandwidth
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 7
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_transmit_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Transmit Bandwidth
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 8
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (avg(irate(container_network_receive_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: 'Average Container Bandwidth by Workload: Received'
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 9
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (avg(irate(container_network_transmit_bytes_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: 'Average Container Bandwidth by Workload: Transmitted'
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 10
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_receive_packets_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Rate of Received Packets
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 11
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_transmit_packets_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Rate of Transmitted Packets
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 12
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_receive_packets_dropped_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Rate of Received Packets Dropped
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  - collapse: false
    height: 250px
    panels:
    - aliasColors: {}
      bars: false
      dashLength: 10
      dashes: false
      datasource: "$datasource"
      fill: 10
      id: 13
      legend:
        avg: false
        current: false
        max: false
        min: false
        show: true
        total: false
        values: false
      lines: true
      linewidth: 0
      links: []
      nullPointMode: null as zero
      percentage: false
      pointradius: 5
      points: false
      renderer: flot
      seriesOverrides: []
      spaceLength: 10
      span: 12
      stack: true
      steppedLine: false
      targets:
      - expr: |
          (sum(irate(container_network_transmit_packets_dropped_total{cluster="$cluster", namespace=~"$namespace"}[$__interval])
          * on (namespace,pod)
          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+", workload_type="$type"}) by (workload))
        format: time_series
        intervalFactor: 2
        legendFormat: "{{workload}}"
        legendLink: 
        step: 10
      thresholds: []
      timeFrom: 
      timeShift: 
      title: Rate of Transmitted Packets Dropped
      tooltip:
        shared: false
        sort: 0
        value_type: individual
      type: graph
      xaxis:
        buckets: 
        mode: time
        name: 
        show: true
        values: []
      yaxes:
      - format: Bps
        label: 
        logBase: 1
        max: 
        min: 0
        show: true
      - format: short
        label: 
        logBase: 1
        max: 
        min: 
        show: false
    repeat: 
    repeatIteration: 
    repeatRowId: 
    showTitle: true
    title: Network
    titleSize: h6
  schemaVersion: 14
  style: dark
  tags:
  - kubernetes-mixin
  templating:
    list:
    - current:
        text: default
        value: default
      hide: 0
      label: 
      name: datasource
      options: []
      query: prometheus
      refresh: 1
      regex: ''
      type: datasource
    - allValue: 
      auto: false
      auto_count: 30
      auto_min: 10s
      current:
        text: deployment
        value: deployment
      datasource: "$datasource"
      definition: label_values(namespace_workload_pod:kube_pod_owner:relabel{namespace=~"$namespace",
        workload=~".+"}, workload_type)
      hide: 0
      includeAll: false
      label: 
      multi: false
      name: type
      options: []
      query: label_values(namespace_workload_pod:kube_pod_owner:relabel{namespace=~"$namespace",
        workload=~".+"}, workload_type)
      refresh: 1
      regex: ''
      skipUrlSync: false
      sort: 0
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
    - allValue: 
      current:
        text: ''
        value: ''
      datasource: "$datasource"
      hide: 2
      includeAll: false
      label: 
      multi: false
      name: cluster
      options: []
      query: label_values(kube_pod_info, cluster)
      refresh: 1
      regex: ''
      sort: 1
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
    - allValue: 
      current:
        text: ''
        value: ''
      datasource: "$datasource"
      hide: 0
      includeAll: false
      label: 
      multi: false
      name: namespace
      options: []
      query: label_values(kube_pod_info{cluster="$cluster"}, namespace)
      refresh: 1
      regex: ''
      sort: 1
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
  time:
    from: now-1h
    to: now
  timepicker:
    refresh_intervals:
    - 5s
    - 10s
    - 30s
    - 1m
    - 5m
    - 15m
    - 30m
    - 1h
    - 2h
    - 1d
    time_options:
    - 5m
    - 15m
    - 1h
    - 6h
    - 12h
    - 24h
    - 2d
    - 7d
    - 30d
  timezone: UTC
  title: Kubernetes / Compute Resources / Namespace (Workloads)
  uid: a87fb0d919ec0ea5f6543124e16c42a5
  version: 1
